/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo/tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo/table'
import { Route as DemoStorybookRouteImport } from './routes/demo/storybook'
import { Route as DemoStoreRouteImport } from './routes/demo/store'
import { Route as DemoOrpcTodoRouteImport } from './routes/demo/orpc-todo'
import { Route as DemoDbExampleRouteImport } from './routes/demo/db-example'
import { Route as DemoDbChatRouteImport } from './routes/demo/db-chat'
import { Route as DemoAuthRouteImport } from './routes/demo/auth'
import { Route as ApiSplatRouteImport } from './routes/api/$'
import { Route as AuthedProfileRouteImport } from './routes/_authed/profile'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo/start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo/start.api-request'
import { Route as DemoFormSimpleRouteImport } from './routes/demo/form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo/form.address'
import { Route as DemoApiTqTodosRouteImport } from './routes/demo/api.tq-todos'
import { Route as DemoApiNamesRouteImport } from './routes/demo/api.names'
import { Route as ApiRpcSplatRouteImport } from './routes/api/rpc.$'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth.$'
import { Route as ApiAuthedApiDbChatApiRouteImport } from './routes/api/_authed-api/db-chat-api'
import { Route as DemoStartSsrIndexRouteImport } from './routes/demo/start.ssr.index'
import { Route as DemoStartSsrSpaModeRouteImport } from './routes/demo/start.ssr.spa-mode'
import { Route as DemoStartSsrFullSsrRouteImport } from './routes/demo/start.ssr.full-ssr'
import { Route as DemoStartSsrDataOnlyRouteImport } from './routes/demo/start.ssr.data-only'

const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStorybookRoute = DemoStorybookRouteImport.update({
  id: '/demo/storybook',
  path: '/demo/storybook',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStoreRoute = DemoStoreRouteImport.update({
  id: '/demo/store',
  path: '/demo/store',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoOrpcTodoRoute = DemoOrpcTodoRouteImport.update({
  id: '/demo/orpc-todo',
  path: '/demo/orpc-todo',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoDbExampleRoute = DemoDbExampleRouteImport.update({
  id: '/demo/db-example',
  path: '/demo/db-example',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoDbChatRoute = DemoDbChatRouteImport.update({
  id: '/demo/db-chat',
  path: '/demo/db-chat',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoAuthRoute = DemoAuthRouteImport.update({
  id: '/demo/auth',
  path: '/demo/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSplatRoute = ApiSplatRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedProfileRoute = AuthedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthedRoute,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiTqTodosRoute = DemoApiTqTodosRouteImport.update({
  id: '/demo/api/tq-todos',
  path: '/demo/api/tq-todos',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiNamesRoute = DemoApiNamesRouteImport.update({
  id: '/demo/api/names',
  path: '/demo/api/names',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiRpcSplatRoute = ApiRpcSplatRouteImport.update({
  id: '/api/rpc/$',
  path: '/api/rpc/$',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthedApiDbChatApiRoute = ApiAuthedApiDbChatApiRouteImport.update({
  id: '/api/_authed-api/db-chat-api',
  path: '/api/db-chat-api',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrIndexRoute = DemoStartSsrIndexRouteImport.update({
  id: '/demo/start/ssr/',
  path: '/demo/start/ssr/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrSpaModeRoute = DemoStartSsrSpaModeRouteImport.update({
  id: '/demo/start/ssr/spa-mode',
  path: '/demo/start/ssr/spa-mode',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrFullSsrRoute = DemoStartSsrFullSsrRouteImport.update({
  id: '/demo/start/ssr/full-ssr',
  path: '/demo/start/ssr/full-ssr',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrDataOnlyRoute = DemoStartSsrDataOnlyRouteImport.update({
  id: '/demo/start/ssr/data-only',
  path: '/demo/start/ssr/data-only',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof AuthedProfileRoute
  '/api/$': typeof ApiSplatRoute
  '/demo/auth': typeof DemoAuthRoute
  '/demo/db-chat': typeof DemoDbChatRoute
  '/demo/db-example': typeof DemoDbExampleRoute
  '/demo/orpc-todo': typeof DemoOrpcTodoRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/storybook': typeof DemoStorybookRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/api/db-chat-api': typeof ApiAuthedApiDbChatApiRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof AuthedProfileRoute
  '/api/$': typeof ApiSplatRoute
  '/demo/auth': typeof DemoAuthRoute
  '/demo/db-chat': typeof DemoDbChatRoute
  '/demo/db-example': typeof DemoDbExampleRoute
  '/demo/orpc-todo': typeof DemoOrpcTodoRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/storybook': typeof DemoStorybookRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/api/db-chat-api': typeof ApiAuthedApiDbChatApiRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/profile': typeof AuthedProfileRoute
  '/api/$': typeof ApiSplatRoute
  '/demo/auth': typeof DemoAuthRoute
  '/demo/db-chat': typeof DemoDbChatRoute
  '/demo/db-example': typeof DemoDbExampleRoute
  '/demo/orpc-todo': typeof DemoOrpcTodoRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/storybook': typeof DemoStorybookRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/api/_authed-api/db-chat-api': typeof ApiAuthedApiDbChatApiRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr/': typeof DemoStartSsrIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/api/$'
    | '/demo/auth'
    | '/demo/db-chat'
    | '/demo/db-example'
    | '/demo/orpc-todo'
    | '/demo/store'
    | '/demo/storybook'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/api/db-chat-api'
    | '/api/auth/$'
    | '/api/rpc/$'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile'
    | '/api/$'
    | '/demo/auth'
    | '/demo/db-chat'
    | '/demo/db-example'
    | '/demo/orpc-todo'
    | '/demo/store'
    | '/demo/storybook'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/api/db-chat-api'
    | '/api/auth/$'
    | '/api/rpc/$'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/_authed/profile'
    | '/api/$'
    | '/demo/auth'
    | '/demo/db-chat'
    | '/demo/db-example'
    | '/demo/orpc-todo'
    | '/demo/store'
    | '/demo/storybook'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/api/_authed-api/db-chat-api'
    | '/api/auth/$'
    | '/api/rpc/$'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  ApiSplatRoute: typeof ApiSplatRoute
  DemoAuthRoute: typeof DemoAuthRoute
  DemoDbChatRoute: typeof DemoDbChatRoute
  DemoDbExampleRoute: typeof DemoDbExampleRoute
  DemoOrpcTodoRoute: typeof DemoOrpcTodoRoute
  DemoStoreRoute: typeof DemoStoreRoute
  DemoStorybookRoute: typeof DemoStorybookRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  ApiAuthedApiDbChatApiRoute: typeof ApiAuthedApiDbChatApiRoute
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
  ApiRpcSplatRoute: typeof ApiRpcSplatRoute
  DemoApiNamesRoute: typeof DemoApiNamesRoute
  DemoApiTqTodosRoute: typeof DemoApiTqTodosRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
  DemoStartSsrDataOnlyRoute: typeof DemoStartSsrDataOnlyRoute
  DemoStartSsrFullSsrRoute: typeof DemoStartSsrFullSsrRoute
  DemoStartSsrSpaModeRoute: typeof DemoStartSsrSpaModeRoute
  DemoStartSsrIndexRoute: typeof DemoStartSsrIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/storybook': {
      id: '/demo/storybook'
      path: '/demo/storybook'
      fullPath: '/demo/storybook'
      preLoaderRoute: typeof DemoStorybookRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/store': {
      id: '/demo/store'
      path: '/demo/store'
      fullPath: '/demo/store'
      preLoaderRoute: typeof DemoStoreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/orpc-todo': {
      id: '/demo/orpc-todo'
      path: '/demo/orpc-todo'
      fullPath: '/demo/orpc-todo'
      preLoaderRoute: typeof DemoOrpcTodoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/db-example': {
      id: '/demo/db-example'
      path: '/demo/db-example'
      fullPath: '/demo/db-example'
      preLoaderRoute: typeof DemoDbExampleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/db-chat': {
      id: '/demo/db-chat'
      path: '/demo/db-chat'
      fullPath: '/demo/db-chat'
      preLoaderRoute: typeof DemoDbChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/auth': {
      id: '/demo/auth'
      path: '/demo/auth'
      fullPath: '/demo/auth'
      preLoaderRoute: typeof DemoAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/profile': {
      id: '/_authed/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthedProfileRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/tq-todos': {
      id: '/demo/api/tq-todos'
      path: '/demo/api/tq-todos'
      fullPath: '/demo/api/tq-todos'
      preLoaderRoute: typeof DemoApiTqTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/names': {
      id: '/demo/api/names'
      path: '/demo/api/names'
      fullPath: '/demo/api/names'
      preLoaderRoute: typeof DemoApiNamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/rpc/$': {
      id: '/api/rpc/$'
      path: '/api/rpc/$'
      fullPath: '/api/rpc/$'
      preLoaderRoute: typeof ApiRpcSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/_authed-api/db-chat-api': {
      id: '/api/_authed-api/db-chat-api'
      path: '/api/db-chat-api'
      fullPath: '/api/db-chat-api'
      preLoaderRoute: typeof ApiAuthedApiDbChatApiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/': {
      id: '/demo/start/ssr/'
      path: '/demo/start/ssr'
      fullPath: '/demo/start/ssr'
      preLoaderRoute: typeof DemoStartSsrIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/spa-mode': {
      id: '/demo/start/ssr/spa-mode'
      path: '/demo/start/ssr/spa-mode'
      fullPath: '/demo/start/ssr/spa-mode'
      preLoaderRoute: typeof DemoStartSsrSpaModeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/full-ssr': {
      id: '/demo/start/ssr/full-ssr'
      path: '/demo/start/ssr/full-ssr'
      fullPath: '/demo/start/ssr/full-ssr'
      preLoaderRoute: typeof DemoStartSsrFullSsrRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/data-only': {
      id: '/demo/start/ssr/data-only'
      path: '/demo/start/ssr/data-only'
      fullPath: '/demo/start/ssr/data-only'
      preLoaderRoute: typeof DemoStartSsrDataOnlyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthedRouteChildren {
  AuthedProfileRoute: typeof AuthedProfileRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedProfileRoute: AuthedProfileRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  ApiSplatRoute: ApiSplatRoute,
  DemoAuthRoute: DemoAuthRoute,
  DemoDbChatRoute: DemoDbChatRoute,
  DemoDbExampleRoute: DemoDbExampleRoute,
  DemoOrpcTodoRoute: DemoOrpcTodoRoute,
  DemoStoreRoute: DemoStoreRoute,
  DemoStorybookRoute: DemoStorybookRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  ApiAuthedApiDbChatApiRoute: ApiAuthedApiDbChatApiRoute,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
  ApiRpcSplatRoute: ApiRpcSplatRoute,
  DemoApiNamesRoute: DemoApiNamesRoute,
  DemoApiTqTodosRoute: DemoApiTqTodosRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
  DemoStartSsrDataOnlyRoute: DemoStartSsrDataOnlyRoute,
  DemoStartSsrFullSsrRoute: DemoStartSsrFullSsrRoute,
  DemoStartSsrSpaModeRoute: DemoStartSsrSpaModeRoute,
  DemoStartSsrIndexRoute: DemoStartSsrIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
